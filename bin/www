#!/usr/bin/env node

/**
 * Adicionando as dependências
 */

var app = require("../app");
var debug = require("debug")("debug-nodejs:server");
var http = require("http");

/**
 * Configurando a porta padrão que será utilizada pelo Express
 */

var port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

/**
 * Criando servidor HTTP
 */

var server = http.createServer(app);

/**
 * Ouvindo na porta fornecida, em todas as interfaces de rede.
 */

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

/**
 * Aplicando normalização na porta com um número, string ou false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Ouvindo eventos de erro no servidor HTTP
 */

function onError(error) {
    if (error.syscall !== "listen") {
        throw error;
    }

    var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case "EACCES":
            console.error(bind + " requires elevated privileges");
            process.exit(1);
            break;
        case "EADDRINUSE":
            console.error(bind + " is already in use");
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Ouvindo o servidor HTTP na porta 300
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
    debug("Listening on " + bind);
}